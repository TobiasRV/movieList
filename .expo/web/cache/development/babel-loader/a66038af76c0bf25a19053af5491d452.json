{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Code\\\\UTN\\\\movieList-reactNative\\\\movieList\\\\components\\\\movieList.js\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MovieCard from \"./movieCard\";\nexport default function MovieList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=ead8068ec023b7d01ad25d135bf8f620&language=en-US&page=1\").then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    setMovieList(responseJson.movies);\n  }).catch(function (err) {\n    alert(Error(\"Error retriving the data: \" + err));\n  });\n\n  var _useState3 = useState([{\n    text: \"buy coffee\",\n    key: \"1\",\n    done: false\n  }, {\n    text: \"create an app\",\n    key: \"2\",\n    done: false\n  }, {\n    text: \"delete search history\",\n    key: \"3\",\n    done: true\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  return React.createElement(FlatList, {\n    data: movieList,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return console.log(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/Code/UTN/movieList-reactNative/movieList/components/movieList.js"],"names":["React","useState","MovieCard","MovieList","movieList","setMovieList","fetch","then","response","json","responseJson","movies","catch","err","alert","Error","text","key","done","todos","setTodos","item","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,SAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,kBACAF,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MAC3BG,SAD2B;AAAA,MAChBC,YADgB;;AAElCC,EAAAA,KAAK,CACH,+GADG,CAAL,CAGGC,IAHH,CAGQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GAHR,EAIGF,IAJH,CAIQ,UAACG,YAAD,EAAkB;AACtBL,IAAAA,YAAY,CAACK,YAAY,CAACC,MAAd,CAAZ;AACD,GANH,EAOGC,KAPH,CAOS,UAACC,GAAD,EAAS;AACdC,IAAAA,KAAK,CAACC,KAAK,CAAC,+BAA+BF,GAAhC,CAAN,CAAL;AACD,GATH;;AAFkC,mBAaRZ,QAAQ,CAAC,CACjC;AAAEe,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,GAAG,EAAE,GAA3B;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GADiC,EAEjC;AAAEF,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,GAAG,EAAE,GAA9B;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GAFiC,EAGjC;AAAEF,IAAAA,IAAI,EAAE,uBAAR;AAAiCC,IAAAA,GAAG,EAAE,GAAtC;AAA2CC,IAAAA,IAAI,EAAE;AAAjD,GAHiC,CAAD,CAbA;AAAA;AAAA,MAa3BC,KAb2B;AAAA,MAapBC,QAboB;;AAkBlC,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEhB,SADR;AAEE,IAAA,UAAU,EACR;AAAA,UAAGiB,IAAH,QAAGA,IAAH;AAAA,aAAcC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAd;AAAA,KAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FlatList, Text } from \"react-native\";\r\nimport MovieCard from \"./movieCard\";\r\n\r\nexport default function MovieList() {\r\n  const [movieList, setMovieList] = useState([]);\r\n  fetch(\r\n    \"https://api.themoviedb.org/3/movie/now_playing?api_key=ead8068ec023b7d01ad25d135bf8f620&language=en-US&page=1\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      setMovieList(responseJson.movies);\r\n    })\r\n    .catch((err) => {\r\n      alert(Error(\"Error retriving the data: \" + err));\r\n    });\r\n\r\n  const [todos, setTodos] = useState([\r\n    { text: \"buy coffee\", key: \"1\", done: false },\r\n    { text: \"create an app\", key: \"2\", done: false },\r\n    { text: \"delete search history\", key: \"3\", done: true },\r\n  ]);\r\n  return (\r\n    <FlatList\r\n      data={movieList}\r\n      renderItem={\r\n        ({ item }) => console.log(item)\r\n        //<MovieCard item={item} />\r\n      }\r\n    />\r\n    // <FlatList\r\n    //   data={todos}\r\n    //   renderItem={({ item }) => <Text>{item.text}</Text>}\r\n    // />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}